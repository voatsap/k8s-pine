apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: helm-environments
  namespace: argo
spec:
  generators:
  - list:
      elements:
      - env: dev
        namespace: mysql-dev
        replicas: "1"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      - env: staging
        namespace: mysql-staging
        replicas: "1"
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
      - env: prod
        namespace: mysql-prod
        replicas: "2"
        resources:
          requests:
            memory: "1Gi"
            cpu: "1000m"
          limits:
            memory: "2Gi"
            cpu: "2000m"
  template:
    metadata:
      name: mysql-{{env}}
      annotations:
        argocd.argoproj.io/sync-wave: "1"
    spec:
      project: default
      sources:
      - chart: mysql
        repoURL: https://charts.bitnami.com/bitnami
        targetRevision: 11.1.15
        helm:
          parameters:
          - name: auth.rootPassword
            value: "{{env}}RootPass123"
          - name: auth.database
            value: "{{env}}db"
          - name: auth.username
            value: "{{env}}user"
          - name: auth.password
            value: "{{env}}Pass123"
          - name: primary.persistence.size
            value: "{{#if (eq env 'prod')}}10Gi{{else}}2Gi{{/if}}"
          - name: primary.resources.requests.memory
            value: "{{resources.requests.memory}}"
          - name: primary.resources.requests.cpu
            value: "{{resources.requests.cpu}}"
          - name: primary.resources.limits.memory
            value: "{{resources.limits.memory}}"
          - name: primary.resources.limits.cpu
            value: "{{resources.limits.cpu}}"
          - name: secondary.replicaCount
            value: "{{#if (eq env 'prod')}}1{{else}}0{{/if}}"
          - name: metrics.enabled
            value: "{{#if (eq env 'prod')}}true{{else}}false{{/if}}"
      destination:
        server: https://kubernetes.default.svc
        namespace: "{{namespace}}"
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
        - CreateNamespace=true
        - ServerSideApply=true
