# Example application demonstrating Bank-Vaults secret injection
# This example shows how to use Bank-Vaults webhook for automatic secret injection
# The webhook will inject a vault-env sidecar that resolves vault: prefixed environment variables
apiVersion: v1
kind: ServiceAccount
metadata:
  name: webapp
  namespace: default
  labels:
    app: webapp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
  namespace: default
  labels:
    app: webapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
      annotations:
        # Bank-Vaults webhook annotations for secret injection
        vault.security.banzaicloud.io/vault-addr: "http://vault:8200"
        vault.security.banzaicloud.io/vault-role: "default"
        vault.security.banzaicloud.io/vault-path: "kubernetes"
        vault.security.banzaicloud.io/vault-skip-verify: "true"
    spec:
      serviceAccountName: webapp
      containers:
        - name: webapp
          image: public.ecr.aws/docker/library/nginx:1.25-alpine
          ports:
            - containerPort: 80
          env:
            # Environment variables with vault: prefixes are resolved by vault-env
            - name: DATABASE_PASSWORD
              value: "vault:secret/data/database#password"
            - name: API_KEY
              value: "vault:secret/data/api#key"
            - name: DATABASE_URL
              value: "postgresql://user:vault:secret/data/database#password@postgres:5432/mydb"
          volumeMounts:
            - name: vault-secrets
              mountPath: /vault/secrets
              readOnly: true
      volumes:
        - name: vault-secrets
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: webapp
  namespace: default
  labels:
    app: webapp
spec:
  selector:
    app: webapp
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  type: ClusterIP
